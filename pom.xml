<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>java-nlp</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>23</maven.compiler.source>
        <maven.compiler.target>23</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <stanford.nlp.version>4.5.8</stanford.nlp.version>
        <jackson.version>2.18.2</jackson.version>
        <mockito.version>5.15.2</mockito.version>
    </properties>

    <repositories>
        <repository>
            <id>clojars</id>
            <url>https://clojars.org/repo/</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- Stanford CoreNLP - for annotation phase -->
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>${stanford.nlp.version}</version>
            <exclusions>
                <!-- Exclude unused language models -->
                <exclusion>
                    <groupId>edu.stanford.nlp</groupId>
                    <artifactId>stanford-corenlp-models-arabic</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>edu.stanford.nlp</groupId>
                    <artifactId>stanford-corenlp-models-chinese</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>edu.stanford.nlp</groupId>
                    <artifactId>stanford-corenlp-models-french</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>edu.stanford.nlp</groupId>
                    <artifactId>stanford-corenlp-models-german</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>edu.stanford.nlp</groupId>
                    <artifactId>stanford-corenlp-models-spanish</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- English models only -->
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>${stanford.nlp.version}</version>
            <classifier>models</classifier>
        </dependency>

        <!-- Command line argument parsing -->
        <dependency>
            <groupId>net.sourceforge.argparse4j</groupId>
            <artifactId>argparse4j</artifactId>
            <version>0.9.0</version>
        </dependency>

        <!-- Progress bar -->
        <dependency>
            <groupId>me.tongfei</groupId>
            <artifactId>progressbar</artifactId>
            <version>0.10.1</version>
        </dependency>

        <!-- LevelDB -->
        <dependency>
            <groupId>org.iq80.leveldb</groupId>
            <artifactId>leveldb</artifactId>
            <version>0.12</version>
        </dependency>
        <dependency>
            <groupId>org.iq80.leveldb</groupId>
            <artifactId>leveldb-api</artifactId>
            <version>0.12</version>
        </dependency>

        <!-- SQLite JDBC -->
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.49.1.0</version>
        </dependency>

        <!-- Guava - Core utilities -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>33.4.5-jre</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.12</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.5.16</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>3.1.12</version>
        </dependency>

        <!-- Compression -->
        <dependency>
            <groupId>me.lemire.integercompression</groupId>
            <artifactId>JavaFastPFOR</artifactId>
            <version>0.2.1</version>
        </dependency>

        <!-- External sorting -->
        <dependency>
            <groupId>com.google.code.externalsortinginjava</groupId>
            <artifactId>externalsortinginjava</artifactId>
            <version>0.6.2</version>
        </dependency>

        <!-- JSON -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- ANTLR4 Runtime -->
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.13.2</version>
        </dependency>

        <!-- Tablesaw - for data tables and visualization -->
        <dependency>
            <groupId>tech.tablesaw</groupId>
            <artifactId>tablesaw-core</artifactId>
            <version>0.43.1</version>
        </dependency>
        <dependency>
            <groupId>tech.tablesaw</groupId>
            <artifactId>tablesaw-html</artifactId>
            <version>0.43.1</version>
        </dependency>
        <dependency>
            <groupId>tech.tablesaw</groupId>
            <artifactId>tablesaw-json</artifactId>
            <version>0.43.1</version>
        </dependency>

        <!-- Nash - for temporal indices -->
        <dependency>
            <groupId>no.ntnu</groupId>
            <artifactId>nash</artifactId>
            <version>1.0</version>
        </dependency>
        
        <!-- Apache Pig - required by Nash -->
        <dependency>
            <groupId>org.apache.pig</groupId>
            <artifactId>pig</artifactId>
            <version>0.17.0</version>
            <exclusions>
                <!-- Exclude Hadoop dependencies to reduce size -->
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-common</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <!-- Commons Lang - required by Nash -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        
        <!-- Add the sandbox source directory to build path -->
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <plugins>
            <!-- Add additional source directory for sandbox code -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>sandbox/src</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Compiler plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>23</source>
                    <target>23</target>
                    <showWarnings>false</showWarnings>
                    <quiet>true</quiet>
                </configuration>
            </plugin>

            <!-- Configure test output -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.2</version>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <trimStackTrace>true</trimStackTrace>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <consoleOutputReporter>
                        <disable>true</disable>
                    </consoleOutputReporter>
                    <statelessTestsetReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
                        <disable>true</disable>
                    </statelessTestsetReporter>
                </configuration>
            </plugin>

            <!-- Single shaded JAR with all functionality -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.6.0</version>
                <!-- Common configuration for all shaded JARs -->
                <configuration>
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer"/>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                            <addHeader>false</addHeader>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
                            <resources>
                                <resource>META-INF/MANIFEST.MF</resource>
                                <resource>module-info.class</resource>
                            </resources>
                        </transformer>
                    </transformers>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                                <exclude>META-INF/MANIFEST.MF</exclude>
                                <exclude>META-INF/LICENSE*</exclude>
                                <exclude>META-INF/NOTICE*</exclude>
                                <exclude>META-INF/DEPENDENCIES</exclude>
                                <exclude>META-INF/*.txt</exclude>
                                <exclude>META-INF/versions/*/module-info.class</exclude>
                                <exclude>module-info.class</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <!-- Query CLI JAR - Always built -->
                    <execution>
                        <id>query-cli-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>query-cli</finalName>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.example.QueryCLI</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Exec plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.5.0</version>
                <configuration>
                    <mainClass>com.example.QueryCLI</mainClass>
                    <vmArgs>-Xss16m -XX:MaxRAMPercentage=70</vmArgs>
                </configuration>
            </plugin>

            <!-- ANTLR4 Plugin -->
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.13.2</version>
                <configuration>
                    <sourceDirectory>${basedir}/src/main/antlr4</sourceDirectory>
                    <outputDirectory>${project.build.directory}/generated-sources/antlr4</outputDirectory>
                    <visitor>true</visitor>
                    <listener>true</listener>
                    <treatWarningsAsErrors>true</treatWarningsAsErrors>
                    <includes>
                        <include>**/*.g4</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                        <phase>generate-sources</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>full-build</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- Add executions for other JARs only in the full-build profile -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <!-- Version and common configuration inherited from base build -->
                        <executions>
                            <!-- Pipeline JAR -->
                            <execution>
                                <id>pipeline-jar</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <finalName>nlp-pipeline</finalName>
                                    <transformers>
                                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                            <mainClass>com.example.Pipeline</mainClass>
                                        </transformer>
                                    </transformers>
                                </configuration>
                            </execution>
                            <!-- LevelDB Browser JAR -->
                            <execution>
                                <id>browser-jar</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <finalName>leveldb-browser</finalName>
                                    <transformers>
                                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                            <mainClass>com.example.LevelDBBrowser</mainClass>
                                        </transformer>
                                    </transformers>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile to only build the query-cli JAR. Activate with -P query-cli-dev -->
        <profile>
            <id>query-cli-dev</id>
            <!-- Activating this profile disables the default 'full-build' profile -->
            <!-- Add Surefire config to run only query tests -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <!-- Version should ideally be managed in pluginManagement or properties -->
                        <!-- Inherit default configuration but override includes -->
                        <configuration>
                            <includes>
                                <include>**/query/**/*.java</include>
                            </includes>
                            <!-- Optionally exclude other tests if needed, though include is usually sufficient -->
                            <!--
                            <excludes>
                                <exclude>**/pipeline/**</exclude>
                                <exclude>**/annotation/**</exclude>
                            </excludes>
                            -->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
